## This image extends 'jangrewe/gitlab-ci-android' by adding node and yarn, needed for DangerJS.
image: 119677764340.dkr.ecr.ap-south-1.amazonaws.com/jangrewe/gitlab-ci-android:1.2

default:
  tags:
    - docker-shared

#variables:
#  CI_DEBUG_TRACE: "true"

workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^chore\(release\)/
      when: never
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "development"'

stages:
  - build
  - post-build
  - deploy
  - release

before_script:
  - export
  - npm install -g gnomon
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
  - if [ "$GRADLE_SCAN" = "true" ]; then GRADLE_SCAN_OPTION="--scan"; fi

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/wrapper
    - node_modules

build-all:
  stage: build
  interruptible: true
  script:
    # `overallCoverageReport` builds everything and creates coverage info
    # `app:lintDebug` is used as an unmbrella project at the moment to run all module Lints
    - "./gradlew overallCoverageReport app:assembleDebug app:lintDebug spotlessCheck --stacktrace"
  artifacts:
    paths:
      - "**/build/reports"
      - "**/build/outputs"

slack-test-app-upload:
  stage: deploy
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: manual
  script:
    - yarn install
    - yarn run upload-app-to-slack

coverage:mergeRequest:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  stage: post-build
  interruptible: true
  script:
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME:$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - "./gradlew jacocoDiffCoverage -PtargetBranch=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME --continue"
  artifacts:
    when: always
    paths:
      - "**/build/**/reports"
      - "**/build/outputs"
    reports:
      cobertura: "**/build/reports/cobertura/cobertura.xml"

deploy:ixigo-sdk:
  extends: .common:snapshot-deploy
  variables:
    LIB: ixigo-sdk

.common:snapshot-deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
  script:
    - "./gradlew $LIB:publishSnapshotPublicationToNexusSnapshotRepository --stacktrace"

danger:
  stage: post-build
  needs:
    - "coverage:mergeRequest"
  dependencies:
    - coverage:mergeRequest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - yarn install
    - yarn danger ci -f -d danger/dangerfile.ts

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
  script:
    - apt install rsync -y
    - ./gradlew dokkaHtmlMultiModule
    - mkdir -p public/docs
    - rsync -a -v build/dokka/htmlMultiModule/ public/docs
  artifacts:
    paths:
      - public

release:
  stage: release
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: manual
  allow_failure: true
  before_script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
    - yarn install
    - yarn run release -- -t ixigo-sdk- --no-verify
    - git push --no-verify --follow-tags http://root:$REPO_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:development
    - yarn run pdf-changelog
    - "./gradlew ixigo-sdk:publishReleasePublicationToNexusRepository --stacktrace"
    - yarn run slack-new-version
  artifacts:
    name: CHANGELOG
    paths:
      - CHANGELOG.md

release-preview:
  stage: release
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
  allow_failure: true
  cache: []
  before_script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
    - yarn install
    - yarn run release -- -t ixigo-sdk- --no-verify
    - yarn run pdf-changelog
  artifacts:
    name: CHANGELOG
    paths:
      - "build/CHANGELOG.pdf"

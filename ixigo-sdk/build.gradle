plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'maven-publish'
    id 'org.jetbrains.dokka'
    id 'com.ncorti.ktfmt.gradle' version '0.7.0'
    id 'com.diffplug.spotless' version '6.0.5'
}

spotless {
    kotlin {
        ktfmt()
        target '**/*.kt'
    }
}

group = 'com.ixigo.sdk'
version = '3.1.0'

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "$version"

        buildConfigField("String", "SDK_VERSION", "\"$versionName\"")

        testInstrumentationRunner 'com.ixigo.sdk.test.util.EspressoRunner'
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    def fragmentVersion = '1.3.6'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1' // Version 5 is only compatible with AGP7

    // Analytics
    implementation 'com.google.android.gms:play-services-analytics:17.0.1'

    // Unit Tests
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    testImplementation("androidx.fragment:fragment-testing:$fragmentVersion")
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.espresso:espresso-web:3.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    testImplementation 'org.awaitility:awaitility-kotlin:4.1.1'
    testImplementation 'org.mockito:mockito-inline:4.2.0'

    // Instrumented Tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    androidTestImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito-inline:2.28.1'
    androidTestImplementation 'commons-io:commons-io:2.11.0' // Used to read html files when testing WebView
}

afterEvaluate {
    publishing {
        publications {
            snapshot(MavenPublication) {
                from components.release
                artifactId = "${project.name}"
                version = "${version}-SNAPSHOT"
            }
            release(MavenPublication) {
                from components.release

                artifactId = "${project.name}"
            }
        }

        repositories {
            maven {
                url = 'https://nexus.ixigo.com/nexus/content/repositories/androidshared'
                name = 'Nexus'
                credentials {
                    username = findProperty('nexusUser') ?: System.env.nexusUser
                    password = findProperty('nexusPassword') ?: System.env.nexusPassword
                }
            }
            maven {
                url = 'https://nexus.ixigo.com/nexus/content/repositories/androidshared-snapshots'
                name = 'NexusSnapshot'
                credentials {
                    username = findProperty('nexusUser') ?: System.env.nexusUser
                    password = findProperty('nexusPassword') ?: System.env.nexusPassword
                }
            }
        }
    }
}
